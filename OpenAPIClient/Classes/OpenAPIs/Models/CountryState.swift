//
// CountryState.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CountryState: Codable, Hashable {

    public var id: UUID?
    public var countryId: UUID?
    public var name: String?
    public var fipsCode: Int?
    public var country: Country?

    public init(id: UUID? = nil, countryId: UUID? = nil, name: String? = nil, fipsCode: Int? = nil, country: Country? = nil) {
        self.id = id
        self.countryId = countryId
        self.name = name
        self.fipsCode = fipsCode
        self.country = country
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case countryId
        case name
        case fipsCode
        case country
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(countryId, forKey: .countryId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(fipsCode, forKey: .fipsCode)
        try container.encodeIfPresent(country, forKey: .country)
    }
}

