//
// DataProviderDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** DataProviderDetails: Data provider details. */
public struct DataProviderDetails: Codable, JSONEncodable, Hashable {

    public var id: String
    public var name: String
    public var category: String
    public var logoUrl: String?
    public var website: String?
    public var supportEmail: String?
    public var helpLineNumber: String?
    public var privacyPolicy: String?
    public var termOfService: String?
    public var dataProtectionOfficer: DataProtectionOfficer
    public var supportedDocumentTypes: [SupportedDocumentType]
    public var supportedAccountTypes: [String]

    public init(id: String, name: String, category: String, logoUrl: String? = nil, website: String? = nil, supportEmail: String? = nil, helpLineNumber: String? = nil, privacyPolicy: String? = nil, termOfService: String? = nil, dataProtectionOfficer: DataProtectionOfficer, supportedDocumentTypes: [SupportedDocumentType], supportedAccountTypes: [String]) {
        self.id = id
        self.name = name
        self.category = category
        self.logoUrl = logoUrl
        self.website = website
        self.supportEmail = supportEmail
        self.helpLineNumber = helpLineNumber
        self.privacyPolicy = privacyPolicy
        self.termOfService = termOfService
        self.dataProtectionOfficer = dataProtectionOfficer
        self.supportedDocumentTypes = supportedDocumentTypes
        self.supportedAccountTypes = supportedAccountTypes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case category
        case logoUrl
        case website
        case supportEmail
        case helpLineNumber
        case privacyPolicy
        case termOfService
        case dataProtectionOfficer
        case supportedDocumentTypes
        case supportedAccountTypes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(category, forKey: .category)
        try container.encodeIfPresent(logoUrl, forKey: .logoUrl)
        try container.encodeIfPresent(website, forKey: .website)
        try container.encodeIfPresent(supportEmail, forKey: .supportEmail)
        try container.encodeIfPresent(helpLineNumber, forKey: .helpLineNumber)
        try container.encodeIfPresent(privacyPolicy, forKey: .privacyPolicy)
        try container.encodeIfPresent(termOfService, forKey: .termOfService)
        try container.encode(dataProtectionOfficer, forKey: .dataProtectionOfficer)
        try container.encode(supportedDocumentTypes, forKey: .supportedDocumentTypes)
        try container.encode(supportedAccountTypes, forKey: .supportedAccountTypes)
    }
}

