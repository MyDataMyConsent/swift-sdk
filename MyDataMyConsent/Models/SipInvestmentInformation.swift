//
// SipInvestmentInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SipInvestmentInformation: Codable, JSONEncodable, Hashable {

    public var instalmentAmount: Double
    public var frequency: String
    public var completedInstalments: Double
    public var investmentValue: Double
    public var lastInstalmentDate: Date?
    public var nextInstalmentDate: Date?

    public init(instalmentAmount: Double, frequency: String, completedInstalments: Double, investmentValue: Double, lastInstalmentDate: Date? = nil, nextInstalmentDate: Date? = nil) {
        self.instalmentAmount = instalmentAmount
        self.frequency = frequency
        self.completedInstalments = completedInstalments
        self.investmentValue = investmentValue
        self.lastInstalmentDate = lastInstalmentDate
        self.nextInstalmentDate = nextInstalmentDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case instalmentAmount = "instalment_amount"
        case frequency
        case completedInstalments = "completed_instalments"
        case investmentValue = "investment_value"
        case lastInstalmentDate = "last_instalment_date"
        case nextInstalmentDate = "next_instalment_date"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(instalmentAmount, forKey: .instalmentAmount)
        try container.encode(frequency, forKey: .frequency)
        try container.encode(completedInstalments, forKey: .completedInstalments)
        try container.encode(investmentValue, forKey: .investmentValue)
        try container.encodeIfPresent(lastInstalmentDate, forKey: .lastInstalmentDate)
        try container.encodeIfPresent(nextInstalmentDate, forKey: .nextInstalmentDate)
    }
}

