//
// ConsentedFinancialAccountField.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** ConsentedFinancialAccountField : Consented financial account field details. */
public struct ConsentedFinancialAccountField: Codable, JSONEncodable, Hashable {

    /** Financial account field title. */
    public var fieldTitle: String
    /** Financial account field slug. */
    public var fieldSlug: String
    /** Requested financial account details. */
    public var requestedDetails: [FinancialAccountDetailsRequired]
    public var transactionPeriod: ConsentedFinancialAccountFieldTransactionPeriod?
    /** Consented financial accounts. */
    public var consentedAccounts: [ConsentedFinancialAccount]

    public init(fieldTitle: String, fieldSlug: String, requestedDetails: [FinancialAccountDetailsRequired], transactionPeriod: ConsentedFinancialAccountFieldTransactionPeriod? = nil, consentedAccounts: [ConsentedFinancialAccount]) {
        self.fieldTitle = fieldTitle
        self.fieldSlug = fieldSlug
        self.requestedDetails = requestedDetails
        self.transactionPeriod = transactionPeriod
        self.consentedAccounts = consentedAccounts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fieldTitle
        case fieldSlug
        case requestedDetails
        case transactionPeriod
        case consentedAccounts
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(fieldTitle, forKey: .fieldTitle)
        try container.encode(fieldSlug, forKey: .fieldSlug)
        try container.encode(requestedDetails, forKey: .requestedDetails)
        try container.encodeIfPresent(transactionPeriod, forKey: .transactionPeriod)
        try container.encode(consentedAccounts, forKey: .consentedAccounts)
    }
}

