//
// FinancialAccountEquity.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FinancialAccountEquity: Codable, JSONEncodable, Hashable {

    public var type: String
    public var id: String
    public var name: String
    public var identifier: String
    public var balance: Double
    public var profile: Profile
    public var summary: EquitySummary
    public var maskedAccountNumber: String
    public var linkedAccountRef: String
    public var version: Float

    public init(type: String, id: String, name: String, identifier: String, balance: Double, profile: Profile, summary: EquitySummary, maskedAccountNumber: String, linkedAccountRef: String, version: Float) {
        self.type = type
        self.id = id
        self.name = name
        self.identifier = identifier
        self.balance = balance
        self.profile = profile
        self.summary = summary
        self.maskedAccountNumber = maskedAccountNumber
        self.linkedAccountRef = linkedAccountRef
        self.version = version
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case id
        case name
        case identifier
        case balance
        case profile
        case summary
        case maskedAccountNumber = "masked_account_number"
        case linkedAccountRef = "linked_account_ref"
        case version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(identifier, forKey: .identifier)
        try container.encode(balance, forKey: .balance)
        try container.encode(profile, forKey: .profile)
        try container.encode(summary, forKey: .summary)
        try container.encode(maskedAccountNumber, forKey: .maskedAccountNumber)
        try container.encode(linkedAccountRef, forKey: .linkedAccountRef)
        try container.encode(version, forKey: .version)
    }
}

