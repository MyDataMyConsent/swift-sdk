//
// SupportedIdentifier.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Supported identifier details for a particular country. */
public struct SupportedIdentifier: Codable, JSONEncodable, Hashable {

    /** Country ISO 2 code. Example: IN, US, etc. */
    public var iso2: String
    /** Country name. Example: India, United States of America, etc. */
    public var name: String
    /** List of supported identifiers for an individual. */
    public var individualIdentifiers: [Identifier]
    /** List of supported identifiers for an organization. */
    public var organizationIdentifiers: [Identifier]

    public init(iso2: String, name: String, individualIdentifiers: [Identifier], organizationIdentifiers: [Identifier]) {
        self.iso2 = iso2
        self.name = name
        self.individualIdentifiers = individualIdentifiers
        self.organizationIdentifiers = organizationIdentifiers
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case iso2
        case name
        case individualIdentifiers
        case organizationIdentifiers
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(iso2, forKey: .iso2)
        try container.encode(name, forKey: .name)
        try container.encode(individualIdentifiers, forKey: .individualIdentifiers)
        try container.encode(organizationIdentifiers, forKey: .organizationIdentifiers)
    }
}

