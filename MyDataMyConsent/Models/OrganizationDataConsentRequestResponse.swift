//
// OrganizationDataConsentRequestResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Organization Data Consent Request Response. */
public struct OrganizationDataConsentRequestResponse: Codable, JSONEncodable, Hashable {

    public var id: UUID?
    public var templateId: UUID?
    public var requestedAtUtc: Date?
    public var requestExpiresAtUtc: Date?
    public var status: DataConsentStatus?
    public var transactionId: String?

    public init(id: UUID? = nil, templateId: UUID? = nil, requestedAtUtc: Date? = nil, requestExpiresAtUtc: Date? = nil, status: DataConsentStatus? = nil, transactionId: String? = nil) {
        self.id = id
        self.templateId = templateId
        self.requestedAtUtc = requestedAtUtc
        self.requestExpiresAtUtc = requestExpiresAtUtc
        self.status = status
        self.transactionId = transactionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case templateId
        case requestedAtUtc
        case requestExpiresAtUtc
        case status
        case transactionId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(templateId, forKey: .templateId)
        try container.encodeIfPresent(requestedAtUtc, forKey: .requestedAtUtc)
        try container.encodeIfPresent(requestExpiresAtUtc, forKey: .requestExpiresAtUtc)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(transactionId, forKey: .transactionId)
    }
}

