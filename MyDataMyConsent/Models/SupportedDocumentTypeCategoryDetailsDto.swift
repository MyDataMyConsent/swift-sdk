//
// SupportedDocumentTypeCategoryDetailsDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SupportedDocumentTypeCategoryDetailsDto: Codable, JSONEncodable, Hashable {

    public var documentTypeCategoryId: UUID
    public var documentTypeCategoryName: String
    public var supportedDocuments: [SupportedDocumentDetailsDto]
    public var supportedDocumentProviderDetails: [SupportedDocumentProviderDetailsDto]?

    public init(documentTypeCategoryId: UUID, documentTypeCategoryName: String, supportedDocuments: [SupportedDocumentDetailsDto], supportedDocumentProviderDetails: [SupportedDocumentProviderDetailsDto]? = nil) {
        self.documentTypeCategoryId = documentTypeCategoryId
        self.documentTypeCategoryName = documentTypeCategoryName
        self.supportedDocuments = supportedDocuments
        self.supportedDocumentProviderDetails = supportedDocumentProviderDetails
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case documentTypeCategoryId
        case documentTypeCategoryName
        case supportedDocuments
        case supportedDocumentProviderDetails
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(documentTypeCategoryId, forKey: .documentTypeCategoryId)
        try container.encode(documentTypeCategoryName, forKey: .documentTypeCategoryName)
        try container.encode(supportedDocuments, forKey: .supportedDocuments)
        try container.encodeIfPresent(supportedDocumentProviderDetails, forKey: .supportedDocumentProviderDetails)
    }
}

