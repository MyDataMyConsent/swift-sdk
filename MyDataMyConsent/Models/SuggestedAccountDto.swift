//
// SuggestedAccountDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SuggestedAccountDto: Codable, Hashable {

    public var issuerId: UUID?
    public var accountId: UUID?
    public var issuerName: String?
    public var accountLogoUrl: String?
    public var accountNumber: String?
    public var accountCategory: String?

    public init(issuerId: UUID? = nil, accountId: UUID? = nil, issuerName: String? = nil, accountLogoUrl: String? = nil, accountNumber: String? = nil, accountCategory: String? = nil) {
        self.issuerId = issuerId
        self.accountId = accountId
        self.issuerName = issuerName
        self.accountLogoUrl = accountLogoUrl
        self.accountNumber = accountNumber
        self.accountCategory = accountCategory
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case issuerId
        case accountId
        case issuerName
        case accountLogoUrl
        case accountNumber
        case accountCategory
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(issuerId, forKey: .issuerId)
        try container.encodeIfPresent(accountId, forKey: .accountId)
        try container.encodeIfPresent(issuerName, forKey: .issuerName)
        try container.encodeIfPresent(accountLogoUrl, forKey: .accountLogoUrl)
        try container.encodeIfPresent(accountNumber, forKey: .accountNumber)
        try container.encodeIfPresent(accountCategory, forKey: .accountCategory)
    }
}

