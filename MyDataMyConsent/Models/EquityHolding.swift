//
// EquityHolding.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EquityHolding: Codable, JSONEncodable, Hashable {

    public var issuerName: String
    public var exchange: String
    public var isin: String
    public var units: Int64
    public var investmentDateTime: Date?
    public var rate: String?
    public var lastTradedPrice: String?
    public var description: String?

    public init(issuerName: String, exchange: String, isin: String, units: Int64, investmentDateTime: Date? = nil, rate: String? = nil, lastTradedPrice: String? = nil, description: String? = nil) {
        self.issuerName = issuerName
        self.exchange = exchange
        self.isin = isin
        self.units = units
        self.investmentDateTime = investmentDateTime
        self.rate = rate
        self.lastTradedPrice = lastTradedPrice
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case issuerName
        case exchange
        case isin
        case units
        case investmentDateTime
        case rate
        case lastTradedPrice
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(issuerName, forKey: .issuerName)
        try container.encode(exchange, forKey: .exchange)
        try container.encode(isin, forKey: .isin)
        try container.encode(units, forKey: .units)
        try container.encodeIfPresent(investmentDateTime, forKey: .investmentDateTime)
        try container.encodeIfPresent(rate, forKey: .rate)
        try container.encodeIfPresent(lastTradedPrice, forKey: .lastTradedPrice)
        try container.encodeIfPresent(description, forKey: .description)
    }
}

