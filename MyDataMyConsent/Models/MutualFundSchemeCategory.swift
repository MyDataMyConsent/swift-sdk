//
// MutualFundSchemeCategory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public enum MutualFundSchemeCategory: String, Codable, CaseIterable {
    case multiCapFund = "MultiCapFund"
    case largeCapFund = "LargeCapFund"
    case largeAndMidCapFund = "LargeAndMidCapFund"
    case midcapFund = "MidcapFund"
    case smallCapFund = "SmallCapFund"
    case dividendYieldFund = "DividendYieldFund"
    case valueFund = "ValueFund"
    case contraFund = "ContraFund"
    case focusedFund = "FocusedFund"
    case sectoralOrThematic = "SectoralOrThematic"
    case elss = "Elss"
    case overnightFund = "OvernightFund"
    case liquidFund = "LiquidFund"
    case ultraShortDurationFund = "UltraShortDurationFund"
    case lowDurationFund = "LowDurationFund"
    case moneyMarketFund = "MoneyMarketFund"
    case shortDurationFund = "ShortDurationFund"
    case mediumDurationFund = "MediumDurationFund"
    case mediumToLongDurationFund = "MediumToLongDurationFund"
    case longDurationFund = "LongDurationFund"
    case dynamicBond = "DynamicBond"
    case corporateBondFund = "CorporateBondFund"
    case creditRiskFund = "CreditRiskFund"
    case bankingAndPsuFund = "BankingAndPsuFund"
    case giltFund = "GiltFund"
    case giltFundWith10YearConstantDuration = "GiltFundWith10YearConstantDuration"
    case floaterFund = "FloaterFund"
    case conservativeHybridFund = "ConservativeHybridFund"
    case balancedHybridFund = "BalancedHybridFund"
    case aggressiveHybridFund = "AggressiveHybridFund"
    case dynamicAssetAllocationOrBalancedAdvantage = "DynamicAssetAllocationOrBalancedAdvantage"
    case multiAssetAllocation = "MultiAssetAllocation"
    case arbitrageFund = "ArbitrageFund"
    case equitySavings = "EquitySavings"
    case retirementFund = "RetirementFund"
    case childrensFund = "ChildrensFund"
    case indexFundsOrEtfs = "IndexFundsOrEtfs"
    case fofsOverseasOrDomestic = "FofsOverseasOrDomestic"
}
