//
// CreditCardSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreditCardSummary: Codable, JSONEncodable, Hashable {

    public var creditCardId: UUID
    public var currentDue: Double
    public var lastStatementDate: Date
    public var dueDate: Date
    public var previousDueAmount: Double
    public var totalDueAmount: Double
    public var minDueAmount: Double
    public var creditLimit: Double
    public var cashLimit: Double
    public var availableCredit: Double
    public var loyaltyPoints: String
    public var financeCharges: Double

    public init(creditCardId: UUID, currentDue: Double, lastStatementDate: Date, dueDate: Date, previousDueAmount: Double, totalDueAmount: Double, minDueAmount: Double, creditLimit: Double, cashLimit: Double, availableCredit: Double, loyaltyPoints: String, financeCharges: Double) {
        self.creditCardId = creditCardId
        self.currentDue = currentDue
        self.lastStatementDate = lastStatementDate
        self.dueDate = dueDate
        self.previousDueAmount = previousDueAmount
        self.totalDueAmount = totalDueAmount
        self.minDueAmount = minDueAmount
        self.creditLimit = creditLimit
        self.cashLimit = cashLimit
        self.availableCredit = availableCredit
        self.loyaltyPoints = loyaltyPoints
        self.financeCharges = financeCharges
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case creditCardId
        case currentDue
        case lastStatementDate
        case dueDate
        case previousDueAmount
        case totalDueAmount
        case minDueAmount
        case creditLimit
        case cashLimit
        case availableCredit
        case loyaltyPoints
        case financeCharges
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(creditCardId, forKey: .creditCardId)
        try container.encode(currentDue, forKey: .currentDue)
        try container.encode(lastStatementDate, forKey: .lastStatementDate)
        try container.encode(dueDate, forKey: .dueDate)
        try container.encode(previousDueAmount, forKey: .previousDueAmount)
        try container.encode(totalDueAmount, forKey: .totalDueAmount)
        try container.encode(minDueAmount, forKey: .minDueAmount)
        try container.encode(creditLimit, forKey: .creditLimit)
        try container.encode(cashLimit, forKey: .cashLimit)
        try container.encode(availableCredit, forKey: .availableCredit)
        try container.encode(loyaltyPoints, forKey: .loyaltyPoints)
        try container.encode(financeCharges, forKey: .financeCharges)
    }
}

